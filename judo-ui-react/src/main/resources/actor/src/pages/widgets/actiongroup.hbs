{{# if child.hiddenBy }} { !data.{{ child.hiddenBy.name }} && {{/ if }}
<Grid item xs={12} {{# neq (calculateSize child) 12.0 }}sm={ {{ calculateSize child }} }{{/ neq }}>
    <Grid container xs={12} spacing={2}>
        {{# if child.customImplementation }}
            <ComponentProxy
                filter={`(&(${OBJECTCLASS}=${CUSTOM_VISUAL_ELEMENT_INTERFACE_KEY})(component=${ {{~ getCustomizationComponentInterfaceKey child ~}} }))`}
                data={data}
                validation={validation}
                editMode={editMode}
                storeDiff={storeDiff}
                payloadDiff={payloadDiff}
            >
        {{/ if }}
        {{# each (featuredActionsForActionGroup child) as |action| }}
            {{# if action.hiddenBy }}( !data.{{ action.hiddenBy.name }} }} && {{/ if }}
            <Grid item>
                <LoadingButton
                    id="{{ createId action }}"
                    loading={isLoading}
                    {{# if action.icon }}
                        startIcon={<MdiIcon path="{{ action.icon.name }}" />}
                        loadingPosition="start"
                    {{/ if }}
                    onClick={ () => {{ actionFunctionName action.action }}({{# if action.action.operation.isMapped }}data, {{/ if }}() => fetchData()) }
                    disabled={ {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} editMode }
                >
                    <span>{ t('{{ idToTranslationKey action.fQName application }}', { defaultValue: '{{ action.label }}' }) }</span>
                </LoadingButton>
            </Grid>
            {{# if action.hiddenBy }}){{/ if }}
        {{/ each }}
        {{# if (displayDropdownForActionGroup child) }}
            <Grid item>
                <DropdownButton
                    id="{{ createId child }}-action-group"
                    disabled={ {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} isLoading || editMode }
                    menuItems={[
                        {{# each (nonFeaturedActionsForActionGroup child) as |action| }}
                            {
                                id: '{{ createId action }}',
                                label: t('{{ idToTranslationKey action.fQName application }}', { defaultValue: '{{ action.label }}' }) as string,
                                onClick: () => {{ actionFunctionName action.action }}({{# if action.action.operation.isMapped }}data, {{/ if }}() => fetchData()),
                                startIcon: <MdiIcon path="arrow_right" />,
                                disabled: {{# if action.enabledBy }}!data.{{ action.enabledBy.name }} ||{{/ if }} isLoading || editMode,
                                {{# if action.hiddenBy }}visible: !data.{{ action.hiddenBy.name }},{{/ if }}
                            },
                        {{/ each }}
                    ]}
                >
                    {{# if child.icon }}
                        <MdiIcon path="{{ child.icon.name }}" />
                    {{/ if }}
                    { t('{{ idToTranslationKey child.fQName application }}', { defaultValue: '{{ child.label }}' }) }
                </DropdownButton>
            </Grid>
        {{/ if }}
        {{# if child.customImplementation }}
            </ComponentProxy>
        {{/ if }}
    </Grid>
</Grid>
{{# if child.hiddenBy }} } {{/ if }}
