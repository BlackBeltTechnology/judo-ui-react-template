{{# if child.hiddenBy }} { !data.{{ child.hiddenBy.name }} && {{/ if }}
<Grid item xs={12} sm={12} {{# neq (calculateSize child) 12.0 }}md={ {{ calculateSize child }} }{{/ neq }}>
    {{# if child.customImplementation }}
        <ComponentProxy
            filter={`(&(${OBJECTCLASS}=${CUSTOM_VISUAL_ELEMENT_INTERFACE_KEY})(component=${ {{~ getCustomizationComponentInterfaceKey child ~}} }))`}
            data={data}
            validation={validation}
            editMode={editMode}
            storeDiff={storeDiff}
            payloadDiff={payloadDiff}
        >
    {{/ if }}
    <TextField
        {{# if child.attributeType.isRequired }} required {{/ if }}
        name="{{ child.attributeType.name }}"
        id="{{ createId child }}"
        label={ t('{{ idToTranslationKey child.fQName application }}', { defaultValue: '{{ child.label }}' }) as string }
        select
        value={ booleanToStringSelect( data.{{ child.attributeType.name }} )}
        error={ !!validation.get('{{ child.attributeType.name }}') }
        helperText={ validation.get('{{ child.attributeType.name }}') }
        onChange={ (event) => {
            storeDiff('{{ child.attributeType.name }}', stringToBooleanSelect(event.target.value));
        } }
        className={ {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} {{ boolValue child.attributeType.isReadOnly }} || !editMode ? 'Mui-readOnly' : undefined }
        InputLabelProps={ { shrink: true } }
        InputProps={ {
            readOnly: {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} {{ boolValue child.attributeType.isReadOnly }} || !editMode,
                {{# if child.icon }}
                    startAdornment: (
                        <InputAdornment position="start">
                            <MdiIcon path="{{ child.icon.name }}" />
                        </InputAdornment>
                    ),
                {{/ if }}
        } }
    >
        <MenuItem id="{{ createId child }}-true" value={'true'}>{ t('judo.form.switch.true', { defaultValue: 'Yes' }) as string }</MenuItem>
        <MenuItem id="{{ createId child }}-false" value={'false'}>{ t('judo.form.switch.false', { defaultValue: 'No' }) as string }</MenuItem>
        <MenuItem id="{{ createId child }}-undefined" value={' '}>{ t('judo.form.switch.unknown', { defaultValue: 'Unknown' }) as string }</MenuItem>
    </TextField>
    {{# if child.customImplementation }}
        </ComponentProxy>
    {{/ if }}
</Grid>
{{# if child.hiddenBy }} } {{/ if }}
