{{# unless page.isPageTypeCreate }}
    {{# if child.hiddenBy }} { !data.{{ child.hiddenBy.name }} && {{/ if }}
    <Grid item xs={12} sm={12} {{# neq (calculateSize child) 12.0 }}md={ {{ calculateSize child }} }{{/ neq }}>
        {{# if child.customImplementation }}
            <ComponentProxy
                filter={`(&(${OBJECTCLASS}=${CUSTOM_VISUAL_ELEMENT_INTERFACE_KEY})(component=${ {{~ getCustomizationComponentInterfaceKey child ~}} }))`}
                data={data}
                validation={validation}
                editMode={editMode}
                storeDiff={storeDiff}
                payloadDiff={payloadDiff}
            >
        {{/ if }}
        {{# if action.isCallOperationAction }}
            <Button id="{{ createId action }}" onClick={() => {{ actionFunctionName action page }}({{# if action.operation.isMapped }}data, {{/ if }}() => fetchData())} disabled={ {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} isLoading  || editMode }>
                {{# if child.icon }}
                    <MdiIcon path="{{ child.icon.name }}" />
                {{/ if }}
                { t('{{ idToTranslationKey child.fQName application }}', { defaultValue: '{{ child.label }}' }) }
            </Button>
        {{/ if }}

        {{# if action.isNavigationToPageAction }}
            {{# if action.dataElement.isCollection }}
                <CollectionAssociationButton id="{{ createId action }}" editMode={editMode} navigateAction={() => {{ actionFunctionName action page }}(data)}>
                    {{# if child.icon }}
                        <MdiIcon path="{{ child.icon.name }}" />
                    {{/ if }}
                    { t('{{ idToTranslationKey child.fQName application }}', { defaultValue: '{{ child.label }}' }) }
                </CollectionAssociationButton>
            {{ else }}
                <AssociationButton
                    id="{{ createId action }}"
                    editMode={editMode}
                    navigateAction={(target) => {{ actionFunctionName action page }}(data, target)}
                    fetchCall={async () => await {{ classServiceName action.dataElement.owner }}Impl.get{{ firstToUpper action.dataElement.name }}(data, {
                        _mask: '{}',
                    })}
                >
                    {{# if child.icon }}
                        <MdiIcon path="{{ child.icon.name }}" />
                    {{/ if }}
                    { t('{{ idToTranslationKey child.fQName application }}', { defaultValue: '{{ child.label }}' }) }
                </AssociationButton>
            {{/ if }}
        {{/ if }}
        {{# if child.customImplementation }}
            </ComponentProxy>
        {{/ if }}
    </Grid>
    {{# if child.hiddenBy }} } {{/ if }}
{{ else }}
    {/* Skipping generation of {{ child.name }} because currently it's not supported on create pages */}
{{/ unless }}
