{{# if child.hiddenBy }} { !data.{{ child.hiddenBy.name }} && {{/ if }}
<Grid item xs={12} sm={12} {{# neq (calculateSize child) 12.0 }}md={ {{ calculateSize child }} }{{/ neq }}>
  {{# if child.customImplementation }}
    <ComponentProxy
      filter={`(&(${OBJECTCLASS}=${CUSTOM_VISUAL_ELEMENT_INTERFACE_KEY})(component=${ {{~ getCustomizationComponentInterfaceKey child ~}} }))`}
      data={data}
      validation={validation}
      editMode={editMode}
      storeDiff={storeDiff}
      payloadDiff={payloadDiff}
    >
  {{/ if }}
  {{# if action.isCallOperationAction }}
    <LoadingButton
      id="{{ createId action }}"
      loading={isLoading}
      variant={ {{{ variantForButton child }}} }
      {{# if child.icon }}
        startIcon={<MdiIcon path="{{ child.icon.name }}" />}
        loadingPosition="start"
      {{/ if }}
      onClick={() => {{ simpleActionDefinitionName action }}({{# if action.operation.isMapped }}data, {{/ if }}() => fetchData())}
      disabled={ {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} editMode }
    >
      <span>{ t('{{ getTranslationKeyForVisualElement child }}', { defaultValue: '{{ child.label }}' }) }</span>
    </LoadingButton>
  {{/ if }}

  {{# if action.isNavigationToPageAction }}
    {{# if action.dataElement.isCollection }}
      <CollectionAssociationButton
        id="{{ createId action }}"
        variant={ {{{ variantForButton child }}} }
        editMode={editMode}
        navigateAction={() => {{ simpleActionDefinitionName action }}(data)}
      >
        { t('{{ getTranslationKeyForVisualElement child }}', { defaultValue: '{{ child.label }}' }) }
        <MdiIcon path="arrow-right" />
      </CollectionAssociationButton>
    {{ else }}
      <AssociationButton
        id="{{ createId action }}"
        variant={ {{{ variantForButton child }}} }
        editMode={editMode}
        navigateAction={(target) => {{ simpleActionDefinitionName action }}(data, target)}
        owner={data}
        fetchCall={async (owner: JudoIdentifiable<any>) => {
          alert('TMP');
        } }
      >
        { t('{{ getTranslationKeyForVisualElement child }}', { defaultValue: '{{ child.label }}' }) }
        <MdiIcon path="arrow-right" />
      </AssociationButton>
    {{/ if }}
  {{/ if }}
  {{# if child.customImplementation }}
    </ComponentProxy>
  {{/ if }}
</Grid>
{{# if child.hiddenBy }} } {{/ if }}
