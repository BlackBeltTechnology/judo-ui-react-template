{{# if child.hiddenBy }} { !data.{{ child.hiddenBy.name }} && {{/ if }}
<Grid item xs={12} sm={12} {{# neq (calculateSize child) 12.0 }}md={ {{ calculateSize child }} }{{/ neq }}>
    {{# if child.customImplementation }}
        <ComponentProxy
            filter={`(&(${OBJECTCLASS}=${CUSTOM_VISUAL_ELEMENT_INTERFACE_KEY})(component=${ {{~ getCustomizationComponentInterfaceKey child ~}} }))`}
            data={data}
            validation={validation}
            editMode={editMode}
            storeDiff={storeDiff}
            payloadDiff={payloadDiff}
        >
    {{/ if }}
    <RadioGroup
        sx={ { justifyContent: 'space-between' } }
        row
        name="{{ child.attributeType.name }}"
        id="{{ createId child }}"
        value={ data.{{ child.attributeType.name }} || '' }
        onChange={ (event) => {
            storeDiff('{{ child.attributeType.name }}', event.target.value);
        } }
    >
    {{# each child.attributeType.dataType.members as |member| }}
        <FormControlLabel
            id="{{ createId member }}"
            value={ '{{ member.name }}' }
            control={<Radio />}
            label= { t('enumerations.{{ restParamName child.attributeType.dataType }}.{{ member.name }}', { defaultValue: '{{ member.name }}' }) }
            disabled={ {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} {{ boolValue child.attributeType.isReadOnly }} || !isFormUpdateable() }
        />
    {{/ each }}
    </RadioGroup>
    {{# if child.customImplementation }}
        </ComponentProxy>
    {{/ if }}
</Grid>
{{# if child.hiddenBy }} } {{/ if }}
