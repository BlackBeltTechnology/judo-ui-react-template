{{# if child.hiddenBy }} { !data.{{ child.hiddenBy.name }} && {{/ if }}
<Grid item xs={12} sm={12} {{# neq (calculateSize child) 12.0 }}md={ {{ calculateSize child }} }{{/ neq }}>
    {{# if child.customImplementation }}
        <ComponentProxy
            filter={`(&(${OBJECTCLASS}=${CUSTOM_VISUAL_ELEMENT_INTERFACE_KEY})(component=${ {{~ getCustomizationComponentInterfaceKey child ~}} }))`}
            data={data}
            validation={validation}
            editMode={editMode}
            storeDiff={storeDiff}
            payloadDiff={payloadDiff}
        >
    {{/ if }}
    <FormControl
        fullWidth={ true }
        sx={ { mt: '10px' } }
        className='MuiTextField-root'
        disabled={ {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} {{ boolValue child.attributeType.isReadOnly }} || !isFormUpdateable() || isLoading }
        error={validation.has('{{ child.attributeType.name }}')}
    >
        <InputLabel id="{{ createId child }}" shrink={true} size={'small'}>
            { t('{{ getTranslationKeyForVisualElement child }}', { defaultValue: '{{ child.label }}' }) }{{# if child.attributeType.isRequired }} *{{/ if }}
        </InputLabel>
        <RadioGroup
            sx={ { justifyContent: 'space-between', pl: '12px', pt: '6px' } }
            {{# unless child.verticalGrow }}
                row
            {{/ unless }}
            name="{{ child.attributeType.name }}"
            id="{{ createId child }}"
            value={ data.{{ child.attributeType.name }} || '' }
            onChange={ async (event) => {
                const newData = await storeDiff('{{ child.attributeType.name }}', event.target.value);
                {{# if child.onBlur }}
                    {{ child.name }}OnBlurAction && {{ child.name }}OnBlurAction(newData, storeDiff, editMode, setEditMode, setValidation, async () => {await submit();});
                {{/ if }}
            } }
        >
        {{# each child.attributeType.dataType.members as |member| }}
            <FormControlLabel
                id="{{ createId member }}"
                value={ '{{ member.name }}' }
                control={<Radio size='small' />}
                label= { t('enumerations.{{ restParamName child.attributeType.dataType }}.{{ member.name }}', { defaultValue: '{{ member.name }}' }) }
                disabled={ {{# if child.enabledBy }}!data.{{ child.enabledBy.name }} ||{{/ if }} {{ boolValue child.attributeType.isReadOnly }} || !isFormUpdateable() }
            />
        {{/ each }}
        </RadioGroup>
        { (validation.has('{{ child.attributeType.name }}'){{# if child.attributeType.isRequired }} && !data.{{ child.attributeType.name }}{{/ if }}) && <FormHelperText>{validation.get('{{ child.attributeType.name }}')}</FormHelperText> }
    </FormControl>
    {{# if child.customImplementation }}
        </ComponentProxy>
    {{/ if }}
</Grid>
{{# if child.hiddenBy }} } {{/ if }}
