{{> fragment.header.hbs }}
// Hook: Access Create

import { useTranslation } from 'react-i18next';
import type { {{ getMuiDataGridImportsForHooks }} } from '@mui/x-data-grid';
import { Button } from '@mui/material';
import { LoadingButton } from '@mui/lab';
import { FilterOption, FilterType } from '../{{ relativePathFromPage page 'components-api' }}';
import {
    {{# each (getApiImportsForCreatePage page) as |imp| }}
        {{ imp }},
    {{/ each }}
} from '../{{ relativePathFromPage page 'generated/data-api' }}';
import { baseColumnConfig, toastConfig } from '../{{ relativePathFromPage page 'config' }}';
import { fileHandling, serviceDateToUiDate, serviceTimeToUiTime, } from '../{{ relativePathFromPage page 'utilities' }}';
import { useL10N } from '../{{ relativePathFromPage page 'l10n' }}/l10n-context';

export const use{{ pageName page }} = () => {
    const { t } = useTranslation();
    const { downloadFile, extractFileNameFromToken, uploadFile } = fileHandling();
    const { locale: l10nLocale } = useL10N();
    {{# if (hasVisualReferences page) }}
        {{# each (getPageTables page) as |table| }}
            {{# if debugPrint }}// include: actor/src/fragments/table/hook-variables.fragment.hbs{{/ if }}
            {{> actor/src/fragments/table/hook-variables.fragment.hbs table=table }}
        {{/ each }}
        {{# each (getPageLinks page) as |link| }}
            {{# if debugPrint }}// include: actor/src/fragments/link/hook-variables.fragment.hbs{{/ if }}
            {{> actor/src/fragments/link/hook-variables.fragment.hbs link=link }}
        {{/ each }}

        return {
            {{# each (getPageTables page) as |table| }}
                {{ table.dataElement.name }}Columns,
                {{ table.dataElement.name }}RangeFilterOptions,
                {{ table.dataElement.name }}InitialQueryCustomizer,
            {{/ each }}
            {{# each (getPageWritableLinks page) as |link| }}
                {{ link.dataElement.name }}Columns,
                {{ link.dataElement.name }}RangeFilterOptions,
                {{ link.dataElement.name }}InitialQueryCustomizer,
            {{/ each }}
        };
    {{ else }}
        return {};
    {{/ if }}
};
