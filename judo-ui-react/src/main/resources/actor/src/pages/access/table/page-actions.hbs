import { useTranslation } from 'react-i18next';
import { Button, Grid } from '@mui/material';
import { MdiIcon } from '~/components';
import {
    {{# each (getOnlyPageActions page) as |action| }}
        {{# unless action.isFilterAction }}
            {{ actionFunctionHookName action }},
        {{/ unless }}
    {{/ each }}
} from '../actions';

export interface PageActionsProps {
    isLoading: boolean;
    tableRef: any;
}

export function PageActions (props: PageActionsProps) {
    const { isLoading, tableRef } = props;
    const { t } = useTranslation();

    {{# each (getOnlyPageActions page) as |action| }}
        {{# unless action.isFilterAction }}
            const {{ actionFunctionName action }} = {{ actionFunctionHookName action }}();
        {{/ unless }}
    {{/ each }}

    return (
        <>
            {{# each (getUniquePageActions page) as |action| }}
                {{# if action.isCreateAction }}
                    <Grid className="page-action" item>
                        <Button id="page-action-create" onClick={ () => {{ actionFunctionName action }}(() => tableRef.current?.fetchData()) } disabled={isLoading}>
                            <MdiIcon path="file_document_plus" />
                            {t('judo.pages.table.create', { defaultValue: 'Create' })}
                        </Button>
                    </Grid>
                {{/ if }}
                {{# if action.isRefreshAction }}
                    <Grid className="page-action" item>
                        <Button id="page-action-refresh" onClick={ () => {{ actionFunctionName action }}(() => tableRef.current?.fetchData()) } disabled={isLoading}>
                            <MdiIcon path="refresh" />
                            {t('judo.pages.table.refresh', { defaultValue: 'Refresh' })}
                        </Button>
                    </Grid>
                {{/ if }}
            {{/ each }}
        </>
    );
}
