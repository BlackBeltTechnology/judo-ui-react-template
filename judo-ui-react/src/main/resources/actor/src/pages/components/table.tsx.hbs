{{> fragment.header.hbs }}
import { useEffect, useState, useImperativeHandle, forwardRef } from 'react';
import { JudoIdentifiable } from '@judo/data-api-common';
import { OBJECTCLASS } from '@pandino/pandino-api';
import { useTranslation } from 'react-i18next';
import { Button } from '@mui/material';
import type { {{ getMuiDataGridImportsForTables }} } from '@mui/x-data-grid';
import { GridToolbarContainer, DataGrid } from '@mui/x-data-grid';
import { MdiIcon, CustomTablePagination } from '~/components';
import { baseColumnConfig, baseTableConfig, toastConfig, dividerHeight } from '~/config';
import { useFilterDialog, useRangeDialog } from '~/components/dialog';
import { columnsActionCalculator } from '~/components/table';
import { FilterOption, FilterType, Filter } from '~/components-api';
import type { PersistedTableData, RefreshableTable, TableRowAction } from '~/utilities';
import {
    fileHandling,
    serviceDateToUiDate,
    serviceTimeToUiTime,
    processQueryCustomizer,
    mapAllFiltersToQueryCustomizerProperties,
    useErrorHandler,
    ERROR_PROCESSOR_HOOK_INTERFACE_KEY,
} from '~/utilities';
import { useL10N } from '~/l10n/l10n-context';
{{# if page.isPageTypeTable }}
    {{# if debugPrint }}// include: actor/src/pages/components/table/for-table-page.hbs{{/ if }}
    {{> actor/src/pages/components/table/for-table-page.hbs }}
{{ else }}
    {{# if table.dataElement.isRelationKindAssociation }}
        {{# if debugPrint }}// include: actor/src/pages/components/table/for-association.hbs{{/ if }}
        {{> actor/src/pages/components/table/for-association.hbs }}
    {{ else }}
        {{# if debugPrint }}// include: actor/src/pages/components/table/for-aggregation.hbs{{/ if }}
        {{> actor/src/pages/components/table/for-aggregation.hbs }}
    {{/ if }}
{{/ if }}
