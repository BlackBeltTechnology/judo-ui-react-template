const {{ simpleActionDefinitionName action.actionDefinition }} = async () => {
  const { result, data: returnedData } = await open{{ pageName action.targetPageDefinition }}({{{ getSelectorOpenActionParameters action page.container }}});
  if (result === 'submit') {
    if (Array.isArray(returnedData) && returnedData.length) {
      {{# with (getTableParentForActionDefinition action.actionDefinition) as |table| }}
        {{# if table.isEager }}
          storeDiff('{{ table.dataElement.name }}', [...(data.{{ table.dataElement.name }} || []), ...returnedData]);
        {{ else }}
          try {
            setIsLoading(true);
            await {{ getServiceImplForPage page }}.add{{ firstToUpper action.targetDataElement.name }}(
              {{# if (pageHasSignedId page) }}
                { __signedIdentifier: signedIdentifier } as any
              {{ else }}
                {{# if page.openInDialog }}
                  ownerData
                {{ else }}
                  data
                {{/ if }}
              {{/ if }},
              returnedData
            );
            await refresh();
          } catch(e) {
            console.error(e);
          } finally {
            setIsLoading(false);
          }
        {{/ if }}
      {{/ with }}
    }
  }
};

