{{# if action.targetDataElement }}
const {{ simpleActionDefinitionName action.actionDefinition }} = async (queryCustomizer: {{ classDataName action.targetDataElement.target 'QueryCustomizer' }}) => {
{{ else }}
const {{ simpleActionDefinitionName action.actionDefinition }} = async (queryCustomizer: {{ classDataName (getReferenceClassType page) 'QueryCustomizer' }}) => {
{{/ if }}
  try {
    setIsLoading(true);
{{# if container.isRelationSelector }}
    const response = await {{ getServiceImplForPage page }}.export(undefined, queryCustomizer);
{{ else }}
  const response = await {{ getServiceImplForPage page }}.export{{# if action.targetDataElement }}{{ firstToUpper action.targetDataElement.name }}{{/ if }}({{# if (pageHasSignedId page) }}{ __signedIdentifier: signedIdentifier } as any{{ else }}undefined{{/ if }}, queryCustomizer);
{{/ if }}

    exportFile(response);
  } catch (error) {
    console.error(error);
  }
  finally {
    setIsLoading(false);
  }
}
