const {{ simpleActionDefinitionName action.actionDefinition }} = async () => {
  try {
    setIsLoading(true);
    const res = await {{ getServiceImplForPage page }}.create{{# if action.targetDataElement }}{{ firstToUpper action.targetDataElement.name }}{{/ if }}({{# unless action.ownerDataElement.isAccess }}ownerData, {{/ unless }}data);
    showSuccessSnack(t('judo.action.create.success', { defaultValue: 'Create successful' }));
    onSubmit(res);
  } catch (error) {
     handleError<{{ classDataName (getReferenceClassType page) '' }}>(error, { setValidation }, data);
  } finally {
    setIsLoading(false);
  }
};
