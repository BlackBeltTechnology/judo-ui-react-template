{{> fragment.header.hbs }}

{{# if isDebugPrint }}// include: actor/src/fragments/table/common-imports.fragment.hbs{{/ if }}
{{> actor/src/fragments/table/common-imports.fragment.hbs }}

import {
    {{# each (getApiImportsForUnmappedOperationOutputAction page) as |imp| }}
        {{ imp }},
    {{/ each }}
} from '~/generated/data-api';
import {
    {{ classServiceName table.dataElement.owner }}Impl,
    {{# neq (classServiceName table.dataElement.owner) (classServiceName page.dataElement.target) }}
        {{ classServiceName page.dataElement.target }}Impl,
    {{/ neq }}
} from '~/generated/data-axios';

{{# if (tableHasActionsToImport table) }}
    import {
        {{# each (getFilteredTableActions table) as |action| }}
            {{ actionFunctionHookName action }},
        {{/ each }}
    } from '../actions';
{{/ if }}

export interface {{ tableComponentName table }}Props {
    ownerData: {{ classDataName table.dataElement.owner '' }};
    editMode: boolean;
    isFormUpdateable: () => boolean;
    isOwnerLoading: boolean;
    storeDiff: (attributeName: keyof {{ classDataName table.dataElement.owner '' }}, value: any) => void;
}

export function {{ tableComponentName table }}(props: {{ tableComponentName table }}Props) {
    return (
        <div>{{ table.name }}</div>
    );
}
