const {{ simpleActionDefinitionName action.actionDefinition }} = async (selected: {{ classDataName action.actionDefinition.targetType 'Stored' }}) => {
  {{# with (getLinkParentForActionDefinition action.actionDefinition) as |link| }}
  try {
    {{# if link.isEager }}
      storeDiff('{{ link.dataElement.name }}', selected);
    {{ else }}
      await {{ getServiceImplForPage page }}.set{{ firstToUpper link.dataElement.name }}(data, selected);
      {{# if page.container.view }}
        if (!editMode) {
          {{# with (getRefreshActionDefinitionForContainer page.container) as |actionDefinition| }}
            await actions.{{ simpleActionDefinitionName actionDefinition }}!(processQueryCustomizer(getPageQueryCustomizer()));
          {{/ with }}
        }
      {{/ if }}
    {{/ if }}
  } catch (error) {
    handleError(error);
    return Promise.reject(error);
  }
  {{/ with }}
};
