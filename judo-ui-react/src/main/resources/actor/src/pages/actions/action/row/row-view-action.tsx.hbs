{{> fragment.header.hbs }}
// Action: ViewAction

import { OBJECTCLASS } from '@pandino/pandino-api';
import { useTrackService } from '@pandino/react-hooks';
import type { JudoIdentifiable } from '@judo/data-api-common';
import type {
    {{# each (getApiImportsForRowAction action) as |imp| }}
        {{ imp }},
    {{/ each }}
} from '{{ relativePathFromAction page action 'generated/data-api' }}';
import { useJudoNavigation } from '{{ relativePathFromAction page action 'components' }}';

export const {{ getCustomizationActionFunctionInterfaceKey action }} = '{{ actionFunctionTypeName action }}';
export type {{ actionFunctionTypeName action }} = () => ({{# if (hasDataElementOwner action.dataElement) }}owner: {{{ getTypeForRelationOwner action.dataElement }}}, {{/ if }}entry: {{ classDataName action.target.dataElement.target 'Stored' }}) => Promise<void>;

export const {{ actionFunctionHookName action }}: {{ actionFunctionTypeName action }} = () => {
    const { navigate } = useJudoNavigation();
    const { service: useCustomNavigation } = useTrackService<{{ actionFunctionTypeName action }}>(`(${OBJECTCLASS}=${ {{ getCustomizationActionFunctionInterfaceKey action }} })`);

    if (useCustomNavigation) {
        const customNavigation = useCustomNavigation();
        return customNavigation;
    }

    return async function ({{# if (hasDataElementOwner action.dataElement) }}owner: {{{ getTypeForRelationOwner action.dataElement }}}, {{/ if }}entry: {{ classDataName action.target.dataElement.target 'Stored' }}) {
        navigate(`{{ getNavigationForPage action.target 'entry.__signedIdentifier' }}`);
    }
};
