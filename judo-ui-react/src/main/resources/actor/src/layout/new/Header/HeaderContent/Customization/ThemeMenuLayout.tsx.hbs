// material-ui
import { useTheme } from '@mui/material/styles';
import {Card, CardMedia, FormControlLabel, Grid, Radio, RadioGroup, Stack, Typography, useMediaQuery } from '@mui/material';

// project import
import useConfig from '../../../etc/useConfig';

// assets
import defaultLayout from '~/assets/images/customization/default.svg';
import containerLayout from '~/assets/images/customization/container.svg';

// types
import { MenuOrientation } from '../../../etc/types/config';

// ==============================|| CUSTOMIZATION - CONTAINER ||============================== //

const ThemeMenuLayout = () => {
  const theme = useTheme();
  const downLG = useMediaQuery(theme.breakpoints.down('lg'));

  const { menuOrientation, onChangeMenuOrientation, onChangeMiniDrawer } = useConfig();
  const isHorizontal = menuOrientation === MenuOrientation.HORIZONTAL && !downLG;

  const handleContainerChange = (e: any) => {
    if (e.target.value === MenuOrientation.HORIZONTAL) {
      onChangeMiniDrawer(true);
      onChangeMenuOrientation(e.target.value);
    } else {
      onChangeMiniDrawer(true);
      onChangeMenuOrientation(e.target.value);
      onChangeMiniDrawer(false);
    }
  };

  return (
    <RadioGroup row aria-label="payment-card" name="payment-card" value={menuOrientation} onChange={handleContainerChange}>
      <Grid container spacing={1.75} sx={ { ml: 0 } }>
        <Grid item>
          <FormControlLabel
            control={<Radio value={MenuOrientation.VERTICAL} sx={ { display: 'none' } } />}
            sx={ { display: 'flex', '& .MuiFormControlLabel-label': { flex: 1 } } }
            label={
              <Card
                sx={ { bgcolor: !isHorizontal ? 'primary.lighter' : 'secondary.lighter', p: 1 } }
                {...(!isHorizontal && { boxShadow: true/*, shadow: theme.customShadows.primary*/ })}
              >
                <Stack spacing={1.25} alignItems="center">
                  <CardMedia component="img" src={defaultLayout} alt="Vertical" sx={ { borderRadius: 1, width: 64, height: 64 } } />
                  <Typography variant="caption">Vertical</Typography>
                </Stack>
              </Card>
            }
          />
        </Grid>
        <Grid item>
          <FormControlLabel
            control={<Radio value={MenuOrientation.HORIZONTAL} sx={ { display: 'none' } } />}
            sx={ { display: 'flex', '& .MuiFormControlLabel-label': { flex: 1 } } }
            label={
              <Card
                sx={ { bgcolor: isHorizontal ? 'primary.lighter' : 'secondary.lighter', p: 1 } }
                {...(isHorizontal && { boxShadow: true/*, shadow: theme.customShadows.primary*/ })}
              >
                <Stack spacing={1.25} alignItems="center">
                  <CardMedia component="img" src={containerLayout} alt="horizontal" sx={ { borderRadius: 1, width: 64, height: 64 } } />
                  <Typography variant="caption">Horizontal</Typography>
                </Stack>
              </Card>
            }
          />
        </Grid>
      </Grid>
    </RadioGroup>
  );
};

export default ThemeMenuLayout;
