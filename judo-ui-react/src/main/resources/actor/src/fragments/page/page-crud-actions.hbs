{{# if page.dataElement.isUpdatable }}
    {editMode && (
        <Grid item>
            <Button id="page-action-edit-save" onClick={() => saveData()} disabled={isLoading}>
                <MdiIcon path="content-save" />
                {t('judo.pages.save', { defaultValue: 'Save' })}
            </Button>
        </Grid>
    )}
    {editMode && (
        <Grid item>
            <Button
                id="page-action-edit-cancel"
                variant="outlined"
                onClick={() => {
                    setEditMode(false);
                    fetchData();
                }}
                disabled={isLoading}
            >
                <MdiIcon path="cancel" />
                {t('judo.pages.cancel', { defaultValue: 'Cancel' })}
            </Button>
        </Grid>
    )}
    {!editMode && (
        <Grid item>
            <Button id="page-action-edit" onClick={() => setEditMode(true)} disabled={isLoading || !data.__updateable}>
                <MdiIcon path="pencil" />
                {t('judo.pages.edit', { defaultValue: 'Edit' })}
            </Button>
        </Grid>
    )}
{{/ if }}
{{# if page.dataElement.isRefreshable }}
    {!editMode && (
        <Grid item>
            <Button id="page-action-refresh" onClick={() => fetchData()} disabled={isLoading}>
                <MdiIcon path="refresh" />
                {t('judo.pages.refresh', { defaultValue: 'Refresh' })}
            </Button>
        </Grid>
    )}
{{/ if }}
{{# if page.dataElement.isDeletable }}
    {!editMode && (
        <Grid item>
            <Button id="page-action-delete" onClick={() => deleteData()} disabled={isLoading || !data.__deleteable}>
                <MdiIcon path="delete" />
                {t('judo.pages.delete', { defaultValue: 'Delete' })}
            </Button>
        </Grid>
    )}
{{/ if }}
