{{# if page.dataElement.isUpdatable }}
    {editMode && isFormUpdateable() && (
        <Grid className="page-action" item>
            <Button
                id="page-action-edit-cancel"
                variant="outlined"
                startIcon={<MdiIcon path="cancel" />}
                onClick={() => {
                    setEditMode(false);
                    fetchData();
                }}
                disabled={isLoading}
            >
                {t('judo.pages.cancel', { defaultValue: 'Cancel' })}
            </Button>
        </Grid>
    )}
    {editMode && isFormUpdateable() && (
        <Grid className="page-action" item>
            <LoadingButton loading={isLoading} loadingPosition="start" id="page-action-edit-save" startIcon={<MdiIcon path="content-save" />} onClick={() => submit()}>
                <span>{t('judo.pages.save', { defaultValue: 'Save' })}</span>
            </LoadingButton>
        </Grid>
    )}
{{/ if }}
{{# if page.dataElement.isRefreshable }}
    {!editMode && (
        <Grid className="page-action" item>
            <LoadingButton loading={isLoading} loadingPosition="start" id="page-action-refresh" startIcon={<MdiIcon path="refresh" />} onClick={() => fetchData()}>
                <span>{t('judo.pages.refresh', { defaultValue: 'Refresh' })}</span>
            </LoadingButton>
        </Grid>
    )}
{{/ if }}
{{# each page.pageActions as |action| }}
    {{# if action.isDeleteAction }}
        {!editMode && isFormDeleteable() && (
            <Grid className="page-action" item>
                <LoadingButton
                    id="page-action-delete"
                    loading={isLoading}
                    loadingPosition="start"
                    startIcon={<MdiIcon path="delete" />}
                    onClick={ async () => {
                        const confirmed = await openConfirmDialog(
                            'page-delete-action',
                            t('judo.modal.confirm.confirm-delete', { defaultValue: 'Are you sure you would like to delete the selected element?' }),
                            t('judo.modal.confirm.confirm-title', { defaultValue: 'Confirm action' }),
                        );

                        if (confirmed) {
                            deleteData();
                        }
                    } }
                    disabled={!data.__deleteable}
                >
                    <span>{t('judo.pages.delete', { defaultValue: 'Delete' })}</span>
                </LoadingButton>
            </Grid>
        )}
    {{/ if }}
{{/ each }}
