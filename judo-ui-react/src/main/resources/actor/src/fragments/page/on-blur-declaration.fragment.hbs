{{# each (getOnBlurWidgetsForPage page) as |ve| }}
    export type {{ pageName page }}{{ firstToUpper ve.name }}OnBlurAction = (
        data: {{ classDataName page.dataElement.target '' }},
        storeDiff: (attributeName: keyof {{ classDataName page.dataElement.target '' }}, value: any) => Promise<{{ classDataName page.dataElement.target '' }}>,
        editMode: boolean,
        setEditMode: Dispatch<SetStateAction<boolean>>,
        setValidation: Dispatch<SetStateAction<Map<keyof {{ classDataName page.dataElement.target '' }}, string>>>,
        submit: () => Promise<void>,
    ) => Promise<void>;

    export const {{ camelCaseNameToInterfaceKey (pageName page) }}_{{ camelCaseNameToInterfaceKey ve.name }}_ON_BLUR_INTERFACE_KEY = '{{ pageName page }}{{ firstToUpper ve.name }}OnBlurHook';
    export type {{ pageName page }}{{ firstToUpper ve.name }}OnBlurHook = () => {{ pageName page }}{{ firstToUpper ve.name }}OnBlurAction;

{{/ each }}
