{{# if child.hiddenBy }} { (actions?.is{{ safeName child }}Hidden ? !actions?.is{{ safeName child }}Hidden(data, editMode) : !data.{{ child.hiddenBy.name }}) && {{/ if }}
<Grid item xs={12} sm={12} {{# neq (calculateSize child) 12.0 }}md={ {{ calculateSize child }} }{{/ neq }}>
    {{# if child.customImplementation }}
        <ComponentProxy
            filter={`(&(${OBJECTCLASS}=${CUSTOM_VISUAL_ELEMENT_INTERFACE_KEY})(component=${ {{~ getCustomizationComponentInterfaceKey child ~}} }))`}
            data={data}
            validation={validation}
            editMode={editMode}
            storeDiff={storeDiff}
            isLoading={isLoading}
            actions={actions}
        >
    {{/ if }}
    <Grid container sx={ { height: DIVIDER_HEIGHT } } alignItems="center">
        <Grid item xs={12}>
            <Divider id="{{ getXMIID child }}">
                {{# if (elementHasIconOrLabel child) }}
                <Box sx={ { display: 'flex', flexDirection: 'row', alignItems: 'center' } }>
                    {{# if (elementHasIcon child) }}
                    <MdiIcon path="{{ child.icon.iconName }}" {{# if child.label }}sx={ { mr: '.2rem' } }{{/ if }} />
                    {{/ if }}
                    {{# if (elementHasLabel child) }}
                    <Typography id="{{ getXMIID child }}">
                        { t('{{ getTranslationKeyForVisualElement child }}', { defaultValue: '{{ child.label }}' }) as string }
                    </Typography>
                    {{/ if }}
                </Box>
                {{/ if }}
            </Divider>
        </Grid>
    </Grid>
    {{# if child.customImplementation }}
        </ComponentProxy>
    {{/ if }}
</Grid>
{{# if child.hiddenBy }} } {{/ if }}
