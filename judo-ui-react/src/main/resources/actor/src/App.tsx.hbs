{{> fragment.header.hbs }}

import { useEffect, useState } from 'react';
import { IconButton, ThemeProvider } from '@mui/material';
import { SnackbarProvider, closeSnackbar } from 'notistack';
import { L10NProvider } from './l10n/l10n-context';
import { theme } from './theme';
import { BreadcrumbProvider, MdiIcon } from './components';
import { DialogProvider } from './components/dialog';
import { Layout } from './layout';
import { menuItems } from './menu-items';
import { useHeroProps, useLogoProps } from './hooks';
{{# if application.authentication }}
    import { PrincipalProvider } from './auth';
{{/ if }}

function App() {
    const [drawerWidth] = useState<number>(300);
    const heroProps = useHeroProps();
    const logoProps = useLogoProps();

    return (
        <L10NProvider>
            <ThemeProvider theme={theme}>
                {{# if application.authentication }}
                <PrincipalProvider>
                {{/ if }}
                    <SnackbarProvider maxSnack={3} action={(snackbarId) => (
                        <IconButton className="close-error-snackbar" style={ { color: '#fff' } } onClick={() => closeSnackbar(snackbarId)}>
                            <MdiIcon path="close" />
                        </IconButton>
                    )}>
                        <DialogProvider>
                            <BreadcrumbProvider>
                                <Layout items={menuItems} drawerWidth={drawerWidth} logo={logoProps} hero={heroProps} />
                            </BreadcrumbProvider>
                        </DialogProvider>
                    </SnackbarProvider>
                {{# if application.authentication }}
                </PrincipalProvider>
                {{/ if }}
            </ThemeProvider>
        </L10NProvider>
    );
}

export default App;
