{{# unless (containerIsEmptyDashboard container) }}
import type { BundleContext } from '@pandino/pandino-api';
import { useTranslation } from 'react-i18next';
import { useViewData } from '~/hooks';
import { useJudoNavigation } from '~/components';
import { {{ camelCaseNameToInterfaceKey (containerComponentName container) }}_CONTAINER_ACTIONS_HOOK_INTERFACE_KEY } from '~/containers/{{ containerPath container }}/customization';
import type { {{ containerComponentName container }}ContainerHook } from '~/containers/{{ containerPath container }}/customization';
{{# each (getContainerApiImports container) as |imp| }}
import type { {{ classDataName imp '' }}, {{ classDataName imp 'Stored' }} } from '~/services/data-api/model/{{ classDataName imp '' }}';
{{/ each }}
{{# each (getEnumDataTypesForContainer container) as |imp| }}
import type { {{ restParamName imp }} } from '~/services/data-api/model/{{ restParamName imp }}';
{{/ each }}

/**
 * XMIID: {{ getXMIID container }}
 * Name: {{ container.name }}
 *
 * Notes:
 * Don't forget to remove unused hooks, and related imports afterwards to reduce build time and bundle size!
 */
export function register{{ containerComponentName container }}ActionsHook(context: BundleContext) {
  context.registerService<{{ containerComponentName container }}ContainerHook>({{ camelCaseNameToInterfaceKey (containerComponentName container) }}_CONTAINER_ACTIONS_HOOK_INTERFACE_KEY, {{ firstToLower (containerComponentName container) }}ActionsHook);
}

const {{ firstToLower (containerComponentName container) }}ActionsHook: {{ containerComponentName container }}ContainerHook = ({{# unless container.table }}data, editMode, storeDiff{{/ unless }}) => {
  // call other hooks here
  const { t } = useTranslation();
  const { navigate, back } = useJudoNavigation();
  const { getLatestViewData } = useViewData();

  return {
    // implement actions here
  };
};
{{ else }}
// EMPTY DASHBOARD
{{/ unless }}
