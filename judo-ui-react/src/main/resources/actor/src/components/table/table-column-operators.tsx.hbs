import {
  getGridStringOperators,
  getGridNumericOperators,
  getGridDateOperators,
  getGridBooleanOperators,
  getGridSingleSelectOperators,
  GridFilterInputValue,
  GridFilterInputBoolean,
} from '@mui/x-data-grid{{ getMUIDataGridPlanSuffix }}';
import type { GridFilterOperator } from '@mui/x-data-grid{{ getMUIDataGridPlanSuffix }}';

function filterStringColumnOperators(operator: GridFilterOperator): boolean {
  // https://github.com/mui/mui-x/blob/master/packages/x-data-grid/src/colDef/gridStringOperators.ts
  // startsWith and endsWith is filtered out because they'd need complex value mapping...
  return !(['startsWith', 'endsWith', 'isAnyOf'].includes(operator.value));
}

function filterNumericColumnOperators(operator: GridFilterOperator): boolean {
  // https://github.com/mui/mui-x/blob/master/packages/x-data-grid/src/colDef/gridNumericOperators.ts
  return !(['isAnyOf'].includes(operator.value));
}

function filterDateColumnOperators(operator: GridFilterOperator): boolean {
  // https://github.com/mui/mui-x/blob/master/packages/x-data-grid/src/colDef/gridDateOperators.ts
  return true;
}

function filterDateTimeColumnOperators(operator: GridFilterOperator): boolean {
  // https://github.com/mui/mui-x/blob/master/packages/x-data-grid/src/colDef/gridDateOperators.ts
  return true;
}

function filterBooleanColumnOperators(operator: GridFilterOperator): boolean {
  // https://github.com/mui/mui-x/blob/master/packages/x-data-grid/src/colDef/gridBooleanColDef.tsx
  return true;
}

function filterSingleSelectColumnOperators(operator: GridFilterOperator): boolean {
  // https://github.com/mui/mui-x/blob/master/packages/grid/x-data-grid/src/colDef/gridBooleanOperators.ts
  return !['isAnyOf'].includes(operator.value);
}

export const getStringyNotEqualOperator = (type: string): GridFilterOperator<any, number | string | null, any> => ({
  value: 'not',
  getApplyFilterFn: (filterItem) => {
    if (!filterItem.field || !filterItem.value || !filterItem.operator) {
      return null;
    }

    return (value): boolean => {
      return value !== filterItem.value;
    };
  },
  InputComponent: GridFilterInputValue,
  InputComponentProps: { type },
  getValueAsString: (value: string) => value,
});

export const stringColumnOperators: GridFilterOperator[] = [...getGridStringOperators().filter(filterStringColumnOperators), getStringyNotEqualOperator('string')];
export const numericColumnOperators: GridFilterOperator[] = getGridNumericOperators().filter(filterNumericColumnOperators);
export const dateColumnOperators: GridFilterOperator[] = getGridDateOperators().filter(filterDateColumnOperators);
export const dateTimeColumnOperators: GridFilterOperator[] = getGridDateOperators(true).filter(filterDateTimeColumnOperators); // showTime = true
export const booleanColumnOperators: GridFilterOperator[] = getGridBooleanOperators().filter(filterBooleanColumnOperators);
export const singleSelectColumnOperators: GridFilterOperator[] = getGridSingleSelectOperators().filter(filterSingleSelectColumnOperators);
