{{> fragment.header.hbs }}

import { alpha, createTheme } from '@mui/material';
import type {} from '@mui/x-data-grid{{ getMUIDataGridPlanSuffix }}/themeAugmentation';
import { {{ muiTranslationToken (getDefaultLanguage application) '' }} as {{ muiTranslationToken (getDefaultLanguage application) 'ForMaterial' }} } from '@mui/material/locale';
import { {{ muiTranslationToken (getDefaultLanguage application) '' }} as {{ muiTranslationToken (getDefaultLanguage application) 'ForGrids' }} } from '@mui/x-data-grid{{ getMUIDataGridPlanSuffix }}';
{{# eq (muiTranslationToken (getDefaultLanguage application) '') 'huHU' }}
    import { {{ muiTranslationToken (getDefaultLanguage application) '' }} as {{ muiTranslationToken (getDefaultLanguage application) 'ForDatePickers' }} } from '../l10n/@mui/x-date-pickers';
{{ else }}
    import { {{ muiTranslationToken (getDefaultLanguage application) '' }} as {{ muiTranslationToken (getDefaultLanguage application) 'ForDatePickers' }} } from '@mui/x-date-pickers{{ getMUIPickersPlanSuffix }}';
{{/ eq }}
import { mainContainerPadding } from './extras';
import { applicationTheme } from './application-theme';
import { paletteTheme } from './palette';
import { density } from './density';

const baseTheme = createTheme(paletteTheme, {
    spacing: (factor: number) => `${density.spacingMultiplier * factor}rem`,
    typography: {
        button: {
            fontSize: `${density.fontSize}rem`,
            textTransform: 'none',
        },
    },
    components: {
        MuiAppBar: {
            styleOverrides: {
                colorPrimary: {
                    backgroundColor: paletteTheme.palette.background.default,
                },
            },
        },
        MuiButton: {
            defaultProps: {
                variant: 'contained',
                size: density.buttonSize,
            },
            styleOverrides: {
                root: {
                    borderRadius: density.borderRadius,
                },
            },
        },
        MuiLoadingButton: {
            defaultProps: {
                variant: 'contained',
                size: density.buttonSize,
            },
            styleOverrides: {
                root: {
                    borderRadius: density.borderRadius,
                },
            },
        },
        MuiFormControl: {
            styleOverrides: {
                root: {
                    margin: 0,
                },
            },
        },
        MuiFormControlLabel: {
            styleOverrides: {
                root: {
                    '&.switch > .MuiFormControlLabel-label': {
                        fontSize: `${density.fontSize}rem`,
                    },
                },
            },
        },
        MuiDialogContent: {
            styleOverrides: {
                root: {
                    backgroundColor: paletteTheme.palette.background.default,
                },
            },
        },
        MuiFormLabel: {
            styleOverrides: {
                asterisk: { color: 'red' },
                root: {
                    '&.Mui-required': {
                        fontWeight: 900,
                    },
                },
            },
        },
        MuiInputBase: {
            defaultProps: {
                size: density.inputBaseSize,
            },
            styleOverrides: {
                root: {
                    fontSize: `${density.fontSize}rem`,
                },
            },
        },
        MuiInputLabel: {
            styleOverrides: {
                root: {
                    color: paletteTheme.palette.subtitleColor.main,
                    fontWeight: 500,
                    '&.Mui-focused': {
                        color: paletteTheme.palette.subtitleColor.main,
                    },
                },
            },
        },
        {{> actor/src/theme/index.ts.mui-text-field.fragment.hbs }}
        MuiAutocomplete: {
            defaultProps: {
                fullWidth: true,
                variant: 'filled',
                color: 'secondary',
            },
        },
        MuiRadio: {
            defaultProps: {
                color: 'secondary',
            },
        },
        MuiSelect: {
            styleOverrides: {
                filled: {
                    '&:focus': {
                        backgroundColor: 'transparent',
                    },
                },
            },
        },
        {{> actor/src/theme/index.ts.mui-data-grid.fragment.hbs }}
        {{# if isMUILicensePlanPro }}
            {{> actor/src/theme/index.ts.mui-data-grid-pro.fragment.hbs }}
        {{/ if }}
        MuiPaper: {
            styleOverrides: {
                rounded: {
                    boxShadow: '0px 0px 8px 1px rgba(0,0,0,0.05)',
                    borderRadius: density.borderRadius,
                },
            },
        },
        MuiDrawer: {
            styleOverrides: {
                paper: {
                    border: 'none',
                    boxShadow: '0px 0px 8px 1px rgba(0,0,0,0.05)',
                },
            },
        },
        MuiIconButton: {
            styleOverrides: {
                root: {
                    color: paletteTheme.palette.secondary.main,
                    padding: paletteTheme.spacing(1),
                },
            },
            defaultProps: {
                size: density.buttonSize,
            },
        },
        MuiTooltip: {
            styleOverrides: {
                tooltip: {
                    borderRadius: 4,
                },
            },
        },
        MuiToolbar: {
            defaultProps: {
                variant: 'dense',
            },
        },
        MuiDivider: {
            styleOverrides: {
                root: {
                    backgroundColor: 'rgb(255,255,255,0.15)',
                },
                middle: {
                    marginTop: 8,
                    marginBottom: 8,
                },
            },
        },
        MuiList: {
            styleOverrides: {
                root: {
                    '.MuiListSubheader-root': {
                        color: paletteTheme.palette.subtitleColor.main,
                    },
                },
            },
            defaultProps: {
                dense: density.isListDense,
            },
        },
        MuiListItemText: {
            styleOverrides: {
                root: {
                    '> span': {
                        fontSize: `${density.fontSize}rem`,
                    },
                },
            },
        },
        MuiListItemIcon: {
            styleOverrides: {
                root: {
                    color: 'inherit',
                    minWidth: 'auto',
                    marginRight: paletteTheme.spacing(2),
                },
            },
        },
        MuiAvatar: {
            styleOverrides: {
                root: {
                    width: 32,
                    height: 32,
                },
            },
        },
        MuiCard: {
            styleOverrides: {
                root: {
                    width: '100%',
                    length: '100%',
                },
            },
        },
    },
},
{{ muiTranslationToken (getDefaultLanguage application) 'ForMaterial' }},
{{ muiTranslationToken (getDefaultLanguage application) 'ForGrids' }},
{{ muiTranslationToken (getDefaultLanguage application) 'ForDatePickers' }},
);

const theme = createTheme(baseTheme, applicationTheme);

declare module '@mui/material/styles' {
    interface Palette {
    subtitleColor: Palette['primary'];
    }

    // allow configuration using `createTheme`
    interface PaletteOptions {
        subtitleColor?: PaletteOptions['primary'];
    }
}

export { density, mainContainerPadding, baseTheme, theme };
