# {{ modelName application.actor.fQName }} - {{ application.actor.simpleName }}

This application has been generated by the JUDO toolbox.

## Scripts

- `pnpm run dev`: recommended for local development (watch + dev-server + Hot reload)
- `pnpm run build:dev`: production build without type checking
- `pnpm run build:ci`: full-blown production build
- `pnpm run preview`: starts a dev server serving content from `dist`

## Setup

### NodeJS
We recommend using [NVM](https://github.com/nvm-sh/nvm) to handle your NodeJS
installation.

The recommended NodeJS version is `18.15.0` (LTS), or whatever version which has been set in the `.nvmrc` file.

> If the `.nvmrc` file is empty, we can fix it by setting the `nodeVersion` property in our generator config.

### PNPM

For dependency management we are using [PNPM](https://pnpm.io/benchmarks).

Installing PNPM if you don't have it already:

```
npm i -g pnpm
```

> If you are using NVM to manage your NodeJS installs, the global installation of PNPM will
  place it under the folder where NVM installed your NodeJS!

## Local development

In order for our frontend application to be able to find our running backend, we need to export the following variables:

```
export VITE_API_DEFAULT_BASE_URL="YOUR_BACKEND_URL_HERE"
export VITE_FILE_DEFAULT_BASE_URL="YOUR_BACKEND_URL_HERE"
```

For further details, please consult with [Vite](https://vitejs.dev/)'s official docs:
[Env Variables and Modes](https://vitejs.dev/guide/env-and-mode.html)

Once everything is set up,  we only need to run:

```
pnpm run dev
```

This will launch a dev server with watch capabilities and also [HMR](https://vitejs.dev/guide/features.html#hot-module-replacement).

> Please note that changes applied to files under the `public/` folder does not trigger a reload,
  therefore we need to manually refresh the application in our browser!

## CI builds

The generated application comes in a production friendly setup by default.

If your CI env has been prepared according to the [Setup](#setup) section, then the only command which needs to be run
is:

```
pnpm run build:ci
```

The output of the build is placed under the `dist/` folder.
