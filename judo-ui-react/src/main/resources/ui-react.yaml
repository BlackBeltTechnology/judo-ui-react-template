templates:
  - name: actor/rome.json
    pathExpression: "'rome.json'"
    templateName: actor/rome.json.hbs

  - name: actor/.npmrc
    pathExpression: "'.npmrc'"
    templateName: actor/.npmrc
    copy: true

  - name: actor/gitignore
    pathExpression: "'.gitignore'"
    templateName: actor/gitignore
    copy: true

  - name: actor/package.json
    pathExpression: "'package.json'"
    templateName: actor/package.json.hbs

  - name: actor/pnpm-lock.yaml
    pathExpression: "'pnpm-lock.yaml'"
    templateName: actor/pnpm-lock.yaml
    copy: true

  - name: actor/.nvmrc
    pathExpression: "'.nvmrc'"
    templateName: actor/.nvmrc.hbs

  - name: actor/tsconfig.json
    pathExpression: "'tsconfig.json'"
    templateName: actor/tsconfig.json
    copy: true

  - name: actor/README.md
    pathExpression: "'README.md'"
    templateName: actor/README.md.hbs

  - name: actor/tsconfig.node.json
    pathExpression: "'tsconfig.node.json'"
    templateName: actor/tsconfig.node.json
    copy: true

  - name: actor/vite.config.ts
    pathExpression: "'vite.config.ts'"
    templateName: actor/vite.config.ts

  - name: actor/index.html
    pathExpression: "'index.html'"
    templateName: actor/index.html.hbs

  # Actor - public

  - name: actor/public/favicon.ico
    pathExpression: "'public/favicon.ico'"
    templateName: actor/public/favicon.ico
    copy: true

  - name: actor/public/favicon-16x16.png
    pathExpression: "'public/favicon-16x16.png'"
    templateName: actor/public/favicon-16x16.png
    copy: true

  - name: actor/public/favicon-32x32.png
    pathExpression: "'public/favicon-32x32.png'"
    templateName: actor/public/favicon-32x32.png
    copy: true

  - name: actor/public/judo-color-logo.png
    pathExpression: "'public/judo-color-logo.png'"
    templateName: actor/public/judo-color-logo.png
    copy: true

  - name: actor/public/android-chrome-192x192.png
    pathExpression: "'public/android-chrome-192x192.png'"
    templateName: actor/public/android-chrome-192x192.png
    copy: true

  - name: actor/public/android-chrome-512x512.png
    pathExpression: "'public/android-chrome-512x512.png'"
    templateName: actor/public/android-chrome-512x512.png
    copy: true

  - name: actor/public/apple-touch-icon.png
    pathExpression: "'public/apple-touch-icon.png'"
    templateName: actor/public/apple-touch-icon.png
    copy: true

  - name: actor/public/safari-pinned-tab.svg
    pathExpression: "'public/safari-pinned-tab.svg'"
    templateName: actor/public/safari-pinned-tab.svg
    copy: true

  - name: actor/public/mstile-150x150.png
    pathExpression: "'public/mstile-150x150.png'"
    templateName: actor/public/mstile-150x150.png
    copy: true

  - name: actor/public/browserconfig.xml
    pathExpression: "'public/browserconfig.xml'"
    templateName: actor/public/browserconfig.xml
    copy: true

  - name: actor/public/ninja.png
    pathExpression: "'public/ninja.png'"
    templateName: actor/public/ninja.png
    copy: true

  - name: actor/public/robots.txt
    pathExpression: "'public/robots.txt'"
    templateName: actor/public/robots.txt
    copy: true

  - name: actor/public/i18n/application_default.json
    pathExpression: "'public/i18n/application_default.json'"
    templateName: actor/public/i18n/application_default.json.hbs
    templateContext:
      - name: application
        expression: "#application"

  - name: actor/public/i18n/application_default.json
    pathExpression: "'public/i18n/application_' + #getDefaultLanguage(#defaultLanguage) + '.json'"
    templateName: actor/public/i18n/application_default.json.hbs
    templateContext:
      - name: application
        expression: "#application"

  - name: actor/public/i18n/system_default.json
    pathExpression: "'public/i18n/system_default.json'"
    templateName: actor/public/i18n/system_default.json.hbs
    templateContext:
      - name: application
        expression: "#application"

  - name: actor/public/i18n/system_en-US.json
    pathExpression: "'public/i18n/system_en-US.json'"
    templateName: actor/public/i18n/system_en-US.json.hbs
    templateContext:
      - name: application
        expression: "#application"

  - name: actor/public/i18n/system_hu-HU.json
    pathExpression: "'public/i18n/system_hu-HU.json'"
    templateName: actor/public/i18n/system_hu-HU.json.hbs
    templateContext:
      - name: application
        expression: "#application"

  - name: actor/public/manifest.json
    pathExpression: "'public/manifest.json'"
    templateName: actor/public/manifest.json.hbs

  # Actor - src

  - name: actor/src/App.tsx
    pathExpression: "'src/App.tsx'"
    templateName: actor/src/App.tsx.hbs

  - name: actor/src/menu-items.tsx
    pathExpression: "'src/menu-items.tsx'"
    templateName: actor/src/menu-items.tsx.hbs

  - name: actor/src/routes.tsx
    pathExpression: "'src/routes.tsx'"
    templateName: actor/src/routes.tsx.hbs

  - name: actor/src/vite-env.d.ts
    pathExpression: "'src/vite-env.d.ts'"
    templateName: actor/src/vite-env.d.ts

  - name: actor/src/main.tsx
    pathExpression: "'src/main.tsx'"
    templateName: actor/src/main.tsx.hbs

  # Actor - src - hooks

  - name: actor/src/hooks/index.ts
    pathExpression: "'src/hooks/index.ts'"
    templateName: actor/src/hooks/index.ts.hbs

  - name: actor/src/hooks/useHeroProps.ts
    pathExpression: "'src/hooks/useHeroProps.ts'"
    templateName: actor/src/hooks/useHeroProps.ts.hbs

  - name: actor/src/hooks/useLogoProps.ts
    pathExpression: "'src/hooks/useLogoProps.ts'"
    templateName: actor/src/hooks/useLogoProps.ts.hbs

  - name: actor/src/hooks/useNavigationConfirmation.ts
    pathExpression: "'src/hooks/useNavigationConfirmation.ts'"
    templateName: actor/src/hooks/useNavigationConfirmation.ts.hbs

  # Actor - src - config

  - name: actor/src/config/index.ts
    pathExpression: "'src/config/index.ts'"
    templateName: actor/src/config/index.ts.hbs

  - name: actor/src/config/general.ts
    pathExpression: "'src/config/general.ts'"
    templateName: actor/src/config/general.ts.hbs

  - name: actor/src/config/table.ts
    pathExpression: "'src/config/table.ts'"
    templateName: actor/src/config/table.ts.hbs

  - name: actor/src/config/layout.ts
    pathExpression: "'src/config/layout.ts'"
    templateName: actor/src/config/layout.ts.hbs

  # Actor - src - custom

  - name: actor/src/custom/application-customizer.tsx
    pathExpression: "'src/custom/application-customizer.tsx'"
    templateName: actor/src/custom/application-customizer.tsx.hbs

  - name: actor/src/custom/index.tsx
    pathExpression: "'src/custom/index.tsx'"
    templateName: actor/src/custom/index.tsx.hbs

  - name: actor/src/custom/custom-element-types.ts
    pathExpression: "'src/custom/custom-element-types.ts'"
    templateName: actor/src/custom/custom-element-types.ts.hbs

  - name: actor/src/custom/interfaces.ts
    pathExpression: "'src/custom/interfaces.ts'"
    templateName: actor/src/custom/interfaces.ts.hbs

  # Actor - src - auth

  - name: actor/src/auth/index.tsx
    pathExpression: "'src/auth/index.tsx'"
    templateName: actor/src/auth/index.tsx.hbs

  - name: actor/src/auth/constants.t
    pathExpression: "'src/auth/constants.ts'"
    templateName: actor/src/auth/constants.ts.hbs

  - name: actor/src/auth/Auth.tsx
    pathExpression: "'src/auth/Auth.tsx'"
    templateName: actor/src/auth/Auth.tsx.hbs

  - name: actor/src/auth/axiosInterceptor.ts
    pathExpression: "'src/auth/axiosInterceptor.ts'"
    templateName: actor/src/auth/axiosInterceptor.ts.hbs

  - name: actor/src/auth/principal-context.tsx
    pathExpression: "'src/auth/principal-context.tsx'"
    templateName: actor/src/auth/principal-context.tsx.hbs

  # Actor - src - components

  - name: actor/src/components/ApplicationSelector.tsx
    pathExpression: "'src/components/ApplicationSelector.tsx'"
    templateName: actor/src/components/ApplicationSelector.tsx.hbs

  - name: actor/src/components/CustomBreadcrumb.tsx
    pathExpression: "'src/components/CustomBreadcrumb.tsx'"
    templateName: actor/src/components/CustomBreadcrumb.tsx.hbs

  - name: actor/src/components/CustomTablePagination.tsx
    pathExpression: "'src/components/CustomTablePagination.tsx'"
    templateName: actor/src/components/CustomTablePagination.tsx.hbs

  - name: actor/src/components/DropdownButton.tsx
    pathExpression: "'src/components/DropdownButton.tsx'"
    templateName: actor/src/components/DropdownButton.tsx.hbs

  - name: actor/src/components/Hero.tsx
    pathExpression: "'src/components/Hero.tsx'"
    templateName: actor/src/components/Hero.tsx.hbs

  - name: actor/src/components/index.tsx
    pathExpression: "'src/components/index.tsx'"
    templateName: actor/src/components/index.tsx.hbs

  - name: actor/src/components/Logo.tsx
    pathExpression: "'src/components/Logo.tsx'"
    templateName: actor/src/components/Logo.tsx.hbs

  - name: actor/src/components/MdiIcon.tsx
    pathExpression: "'src/components/MdiIcon.tsx'"
    templateName: actor/src/components/MdiIcon.tsx.hbs

  - name: actor/src/components/ModeledTabs.tsx
    pathExpression: "'src/components/ModeledTabs.tsx'"
    templateName: actor/src/components/ModeledTabs.tsx.hbs

  - name: actor/src/components/PageHeader.tsx
    pathExpression: "'src/components/PageHeader.tsx'"
    templateName: actor/src/components/PageHeader.tsx.hbs

  # Actor - src - components - dialog

  - name: actor/src/components/dialog/ConfirmationDialog.tsx
    pathExpression: "'src/components/dialog/ConfirmationDialog.tsx'"
    templateName: actor/src/components/dialog/ConfirmationDialog.tsx.hbs

  - name: actor/src/components/dialog/DialogProvider.tsx
    pathExpression: "'src/components/dialog/DialogProvider.tsx'"
    templateName: actor/src/components/dialog/DialogProvider.tsx.hbs

  - name: actor/src/components/dialog/FilterDialog.tsx
    pathExpression: "'src/components/dialog/FilterDialog.tsx'"
    templateName: actor/src/components/dialog/FilterDialog.tsx.hbs

  - name: actor/src/components/dialog/hooks.tsx
    pathExpression: "'src/components/dialog/hooks.tsx'"
    templateName: actor/src/components/dialog/hooks.tsx.hbs

  - name: actor/src/components/dialog/index.tsx
    pathExpression: "'src/components/dialog/index.tsx'"
    templateName: actor/src/components/dialog/index.tsx.hbs

  - name: actor/src/components/dialog/PageDialog.tsx
    pathExpression: "'src/components/dialog/PageDialog.tsx'"
    templateName: actor/src/components/dialog/PageDialog.tsx.hbs

  - name: actor/src/components/dialog/RangeDialog.tsx
    pathExpression: "'src/components/dialog/RangeDialog.tsx'"
    templateName: actor/src/components/dialog/RangeDialog.tsx.hbs

  - name: actor/src/components/dialog/StackableDialogProvider.tsx
    pathExpression: "'src/components/dialog/StackableDialogProvider.tsx'"
    templateName: actor/src/components/dialog/StackableDialogProvider.tsx.hbs

  # Actor - src - components - table

  - name: actor/src/components/table/index.tsx
    pathExpression: "'src/components/table/index.tsx'"
    templateName: actor/src/components/table/index.tsx.hbs

  - name: actor/src/components/table/table-row-actions.tsx
    pathExpression: "'src/components/table/table-row-actions.tsx'"
    templateName: actor/src/components/table/table-row-actions.tsx.hbs

  # Actor - src - components - widgets

  - name: actor/src/components/widgets/index.tsx
    pathExpression: "'src/components/widgets/index.tsx'"
    templateName: actor/src/components/widgets/index.tsx.hbs

  - name: actor/src/components/widgets/AggregationInput.tsx
    pathExpression: "'src/components/widgets/AggregationInput.tsx'"
    templateName: actor/src/components/widgets/AggregationInput.tsx.hbs

  - name: actor/src/components/widgets/AssociationButton.tsx
    pathExpression: "'src/components/widgets/AssociationButton.tsx'"
    templateName: actor/src/components/widgets/AssociationButton.tsx.hbs

  - name: actor/src/components/widgets/BinaryInput.tsx
    pathExpression: "'src/components/widgets/BinaryInput.tsx'"
    templateName: actor/src/components/widgets/BinaryInput.tsx.hbs

  - name: actor/src/components/widgets/TrinaryLogicCombobox.tsx
    pathExpression: "'src/components/widgets/TrinaryLogicCombobox.tsx'"
    templateName: actor/src/components/widgets/TrinaryLogicCombobox.tsx.hbs

  # Actor - src - components-api

  - name: actor/src/components-api/components/Action.ts
    pathExpression: "'src/components-api/components/Action.ts'"
    templateName: actor/src/components-api/components/Action.ts.hbs

  - name: actor/src/components-api/components/ActionGroup.ts
    pathExpression: "'src/components-api/components/ActionGroup.ts'"
    templateName: actor/src/components-api/components/ActionGroup.ts.hbs

  - name: actor/src/components-api/components/Button.ts
    pathExpression: "'src/components-api/components/Button.ts'"
    templateName: actor/src/components-api/components/Button.ts.hbs

  - name: actor/src/components-api/components/Hero.ts
    pathExpression: "'src/components-api/components/Hero.ts'"
    templateName: actor/src/components-api/components/Hero.ts.hbs

  - name: actor/src/components-api/components/index.ts
    pathExpression: "'src/components-api/components/index.ts'"
    templateName: actor/src/components-api/components/index.ts.hbs

  - name: actor/src/components-api/components/LabeledElement.ts
    pathExpression: "'src/components-api/components/LabeledElement.ts'"
    templateName: actor/src/components-api/components/LabeledElement.ts.hbs

  - name: actor/src/components-api/components/Logo.ts
    pathExpression: "'src/components-api/components/Logo.ts'"
    templateName: actor/src/components-api/components/Logo.ts.hbs

  - name: actor/src/components-api/components/MenuTree.ts
    pathExpression: "'src/components-api/components/MenuTree.ts'"
    templateName: actor/src/components-api/components/MenuTree.ts.hbs

  - name: actor/src/components-api/components/NamedElement.ts
    pathExpression: "'src/components-api/components/NamedElement.ts'"
    templateName: actor/src/components-api/components/NamedElement.ts.hbs

  - name: actor/src/components-api/components/ReferenceTypedVisualElement.ts
    pathExpression: "'src/components-api/components/ReferenceTypedVisualElement.ts'"
    templateName: actor/src/components-api/components/ReferenceTypedVisualElement.ts.hbs

  - name: actor/src/components-api/components/TrinaryLogic.ts
    pathExpression: "'src/components-api/components/TrinaryLogic.ts'"
    templateName: actor/src/components-api/components/TrinaryLogic.ts.hbs

  - name: actor/src/components-api/components/VisualElement.ts
    pathExpression: "'src/components-api/components/VisualElement.ts'"
    templateName: actor/src/components-api/components/VisualElement.ts.hbs

  - name: actor/src/components-api/dialog/ConfirmationDialog.ts
    pathExpression: "'src/components-api/dialog/ConfirmationDialog.ts'"
    templateName: actor/src/components-api/dialog/ConfirmationDialog.ts.hbs

  - name: actor/src/components-api/dialog/DialogContext.ts
    pathExpression: "'src/components-api/dialog/DialogContext.ts'"
    templateName: actor/src/components-api/dialog/DialogContext.ts.hbs

  - name: actor/src/components-api/dialog/FilterDialog.ts
    pathExpression: "'src/components-api/dialog/FilterDialog.ts'"
    templateName: actor/src/components-api/dialog/FilterDialog.ts.hbs

  - name: actor/src/components-api/dialog/index.ts
    pathExpression: "'src/components-api/dialog/index.ts'"
    templateName: actor/src/components-api/dialog/index.ts.hbs

  - name: actor/src/components-api/index.ts
    pathExpression: "'src/components-api/index.ts'"
    templateName: actor/src/components-api/index.ts.hbs

  # Actor - src - theme

  - name: actor/src/theme/extras.ts
    pathExpression: "'src/theme/extras.ts'"
    templateName: actor/src/theme/extras.ts.hbs

  - name: actor/src/theme/application-theme.ts
    pathExpression: "'src/theme/application-theme.ts'"
    templateName: actor/src/theme/application-theme.ts.hbs

  - name: actor/src/theme/index.ts
    pathExpression: "'src/theme/index.ts'"
    templateName: actor/src/theme/index.ts.hbs

  # Actor - src - utilities

  - name: actor/src/utilities/error-handling.ts
    pathExpression: "'src/utilities/error-handling.ts'"
    templateName: actor/src/utilities/error-handling.ts.hbs

  - name: actor/src/utilities/file-handling.ts
    pathExpression: "'src/utilities/file-handling.ts'"
    templateName: actor/src/utilities/file-handling.ts.hbs

  - name: actor/src/utilities/filter-helper.ts
    pathExpression: "'src/utilities/filter-helper.ts'"
    templateName: actor/src/utilities/filter-helper.ts.hbs

  - name: actor/src/utilities/form-utils.ts
    pathExpression: "'src/utilities/form-utils.ts'"
    templateName: actor/src/utilities/form-utils.ts.hbs

  - name: actor/src/utilities/helper.ts
    pathExpression: "'src/utilities/helper.ts'"
    templateName: actor/src/utilities/helper.ts.hbs

  - name: actor/src/utilities/index.tsx
    pathExpression: "'src/utilities/index.tsx'"
    templateName: actor/src/utilities/index.tsx.hbs

  - name: actor/src/utilities/interfaces.ts
    pathExpression: "'src/utilities/interfaces.ts'"
    templateName: actor/src/utilities/interfaces.ts.hbs

  - name: actor/src/utilities/query-customizer-processor.ts
    pathExpression: "'src/utilities/query-customizer-processor.ts'"
    templateName: actor/src/utilities/query-customizer-processor.ts.hbs

  - name: actor/src/utilities/table.ts
    pathExpression: "'src/utilities/table.ts'"
    templateName: actor/src/utilities/table.ts.hbs

  - name: actor/src/utilities/table-row-actions.tsx
    pathExpression: "'src/utilities/table-row-actions.tsx'"
    templateName: actor/src/utilities/table-row-actions.tsx.hbs

  # Actor - src - utilities - application

  - name: actor/src/utilities/application/index.ts
    pathExpression: "'src/utilities/application/index.ts'"
    templateName: actor/src/utilities/application/index.ts.hbs

  - name: actor/src/utilities/application/interfaces.ts
    pathExpression: "'src/utilities/application/interfaces.ts'"
    templateName: actor/src/utilities/application/interfaces.ts.hbs

  - name: actor/src/utilities/application/change-application.ts
    pathExpression: "'src/utilities/application/change-application.ts'"
    templateName: actor/src/utilities/application/change-application.ts.hbs

  - name: actor/src/utilities/application/generate-alternative-applications.ts
    pathExpression: "'src/utilities/application/generate-alternative-applications.ts'"
    templateName: actor/src/utilities/application/generate-alternative-applications.ts.hbs

  # Actor - src - utilities - icons

  - name: actor/src/utilities/icons/index.ts
    pathExpression: "'src/utilities/icons/index.ts'"
    templateName: actor/src/utilities/icons/index.ts.hbs

  - name: actor/src/utilities/icons/icon-mapping.ts
    pathExpression: "'src/utilities/icons/icon-mapping.ts'"
    templateName: actor/src/utilities/icons/icon-mapping.ts.hbs

  # Actor - src - l10n

  - name: actor/src/l10n/@mui/x-date-pickers/index.ts
    pathExpression: "'src/l10n/@mui/x-date-pickers/index.ts'"
    templateName: actor/src/l10n/@mui/x-date-pickers/index.ts.hbs

  - name: actor/src/l10n/@mui/x-date-pickers/huHU.ts
    pathExpression: "'src/l10n/@mui/x-date-pickers/huHU.ts'"
    templateName: actor/src/l10n/@mui/x-date-pickers/huHU.ts.hbs

  - name: actor/src/l10n/l10n-context.tsx
    pathExpression: "'src/l10n/l10n-context.tsx'"
    templateName: actor/src/l10n/l10n-context.tsx.hbs

  # Actor - src - pages

  - name: actor/src/pages/index.tsx
    factoryExpression: "#getPagesForRouting(#application)"
    pathExpression: "#pageIndexPath(#self)"
    templateName: actor/src/pages/index.tsx.hbs
    templateContext:
      - name: page
        expression: "#self"

  - name: actor/src/pages/page-actions.tsx
    factoryExpression: "#getPagesForRouting(#application)"
    pathExpression: "#pagePath(#self) + 'components/' + #pageName(#self) + 'PageActions.tsx'"
    templateName: actor/src/pages/page-actions.tsx.hbs
    templateContext:
      - name: page
        expression: "#self"

  - name: actor/src/pages/components/link.tsx
    factoryExpression: "#getLinksForPages(#application)"
    pathExpression: "#pagePath(#self.pageDefinition) + 'components/' + #firstToUpper(#self.name) + '.tsx'"
    templateName: actor/src/pages/components/link.tsx.hbs
    templateContext:
      - name: page
        expression: "#self.pageDefinition"
      - name: link
        expression: "#self"

  - name: actor/src/pages/components/table.tsx
    factoryExpression: "#getTablesForPages(#application)"
    pathExpression: "#pagePath(#self.pageDefinition) + 'components/' + #firstToUpper(#self.name) + '.tsx'"
    templateName: actor/src/pages/components/table.tsx.hbs
    templateContext:
      - name: page
        expression: "#self.pageDefinition"
      - name: table
        expression: "#self"

  - name: actor/src/pages/hooks.tsx
    factoryExpression: "#getPagesForRouting(#application)"
    pathExpression: "#pagePath(#self) + 'hooks/use' + #pageName(#self) + '.tsx'"
    templateName: actor/src/pages/hooks.tsx.hbs
    templateContext:
      - name: page
        expression: "#self"

  - name: actor/src/pages/actions/index.tsx
    factoryExpression: "#getPagesForRouting(#application)"
    pathExpression: "#actionsIndexPath(#self)"
    templateName: actor/src/pages/actions/index.tsx.hbs
    templateContext:
      - name: page
        expression: "#self"

  - name: actor/src/pages/actions/action.tsx
    factoryExpression: "#getActionsForPages(#application)"
    pathExpression: "#pagePath(#getActionContainer(#self)) + 'actions/' + #pageActionPathSuffix(#self) + '.tsx'"
    templateName: actor/src/pages/actions/action.tsx.hbs
    templateContext:
      - name: action
        expression: "#self"
      - name: page
        expression: "#getActionContainer(#self)"

  # Actor - src - pages - action forms

  - name: actor/src/pages/actions/actionForm.tsx
    factoryExpression: "#getActionFormsForPages(#application)"
    pathExpression: "#pagePath(#getActionContainer(#self)) + 'actions/' + #pageActionFormPathSuffix(#self) + '/index.tsx'"
    templateName: actor/src/pages/actions/actionForm.tsx.hbs
    templateContext:
      - name: action
        expression: "#self"
      - name: ownerPage
        expression: "#getActionContainer(#self)"

  - name: actor/src/pages/actions/components/link.tsx
    factoryExpression: "#getLinksForActionFormPages(#application)"
    pathExpression: "#pagePath(#getActionContainer(#self.value)) + 'actions/' + #pageActionFormPathSuffix(#self.value) + '/components/' + #firstToUpper(#self.key.name) + '.tsx'"
    templateName: actor/src/pages/actions/components/link.tsx.hbs
    templateContext:
      - name: action
        expression: "#self.value"
      - name: link
        expression: "#self.key"
      - name: ownerPage
        expression: "#getActionContainer(#self.value)"

  - name: actor/src/pages/actions/components/table.tsx
    factoryExpression: "#getTablesForActionFormPages(#application)"
    pathExpression: "#pagePath(#getActionContainer(#self.value)) + 'actions/' + #pageActionFormPathSuffix(#self.value) + '/components/' + #firstToUpper(#self.key.name) + '.tsx'"
    templateName: actor/src/pages/actions/components/table.tsx.hbs
    templateContext:
      - name: action
        expression: "#self.value"
      - name: table
        expression: "#self.key"
      - name: ownerPage
        expression: "#getActionContainer(#self.value)"

  # Actor - src - pages - unmapped output modals

  - name: actor/src/pages/actions/action/call-operation-action/output-view/output-view.tsx
    factoryExpression: "#getUnmappedOutputViewsForPages(#application)"
    pathExpression: "#pagePath(#self) + 'index.tsx'"
    templateName: actor/src/pages/actions/action/call-operation-action/output-view/output-view.tsx.hbs
    templateContext:
      - name: page
        expression: "#self"

  - name: actor/src/pages/actions/action/call-operation-action/output-view/components/link.tsx
    factoryExpression: "#getLinksForUnmappedOutputViewPages(#application)"
    pathExpression: "#pagePath(#self.pageDefinition) + 'components/' + #firstToUpper(#self.name) + '.tsx'"
    templateName: actor/src/pages/actions/action/call-operation-action/output-view/components/link.tsx.hbs
    templateContext:
      - name: page
        expression: "#self.pageDefinition"
      - name: link
        expression: "#self"

  - name: actor/src/pages/actions/action/call-operation-action/output-view/components/table.tsx
    factoryExpression: "#getTablesForUnmappedOutputViewPages(#application)"
    pathExpression: "#pagePath(#self.pageDefinition) + 'components/' + #firstToUpper(#self.name) + '.tsx'"
    templateName: actor/src/pages/actions/action/call-operation-action/output-view/components/table.tsx.hbs
    templateContext:
      - name: page
        expression: "#self.pageDefinition"
      - name: table
        expression: "#self"

  - name: actor/src/pages/actions/index.tsx
    factoryExpression: "#getUnmappedOutputViewsForPages(#application)"
    pathExpression: "#pagePath(#self) + 'actions/index.tsx'"
    templateName: actor/src/pages/actions/index.tsx.hbs
    templateContext:
      - name: page
        expression: "#self"

  - name: actor/src/pages/actions/action.tsx
    factoryExpression: "#getActionsForOutputPages(#application)"
    pathExpression: "#pagePath(#getActionContainer(#self)) + '/actions/' + #pageActionPathSuffix(#self) + '.tsx'"
    templateName: actor/src/pages/actions/action.tsx.hbs
    templateContext:
      - name: action
        expression: "#self"
      - name: page
        expression: "#getActionContainer(#self)"

  # Actor - src - layout

  - name: actor/src/layout/Footer.tsx
    pathExpression: "'src/layout/Footer.tsx'"
    templateName: actor/src/layout/Footer.tsx.hbs

  - name: actor/src/layout/Header.tsx
    pathExpression: "'src/layout/Header.tsx'"
    templateName: actor/src/layout/Header.tsx.hbs

  - name: actor/src/layout/index.tsx
    pathExpression: "'src/layout/index.tsx'"
    templateName: actor/src/layout/index.tsx.hbs

  - name: actor/src/layout/Layout.tsx
    pathExpression: "'src/layout/Layout.tsx'"
    templateName: actor/src/layout/Layout.tsx.hbs

  - name: actor/src/layout/Navigator.tsx
    pathExpression: "'src/layout/Navigator.tsx'"
    templateName: actor/src/layout/Navigator.tsx.hbs
